SELECT ENAME FROM WORKS WHERE CNAME='first bank corporation';

SELECT ENAME,CITY FROM WORKS,EMPLOYEE WHERE
     EMPLOYEE.CNAME= 'first bank corporation' AND WORKS.ENAME =EMPLOYEE.EAME  ; 

SELECT ENAME,CITY FROM WORKS,EMPLOYEE WHERE
     EMPLOYEE.CNAME= 'first bank corporation' AND WORKS.SALARY > 10000 AND WORKS.ENAME =EMPLOYEE.EAME  ; 

SELECT ENAME,EMPLOYEE.CITY FROM WORKS,EMPLOYEE WHERE
    WORKS.ENAME = EMPLOYEE.EAME AND WORK.CITY = EMPLOYEE.CITY ;

SELECT ENAME FROM EMPLOYEE,(
    SELECT STREET,CITY FROM WORKS WHERE 
    WORKS.ENAME = MANAGER.CNAME AND WORKS.ENAME = EMPLOYEE.ENAME AND MANAGER.MANAGER-NAME = WORKS.ENAME
) AS MWORKS WHERE MWORKS.STREET = EMPLOYEE.STREET AND MWORKS.STREET = EMPLOYEE.STREET ;

SELECT ENAME FROM WORKS WHERE CNAME != 'first bank corporation';

SELECT ENMAE FROM WORKS WHERE SALARY > ALL( SELECT SALRAY FROM WORKS WHERE CNAME = 'small bank corporation') ;


CREATE TABLE Researcher(
    rno INT PRIMARY KEY,
    rsex INT CONSTRAINT C1 CHECK (rsex BETWEEN 0 AND 1),
    rage INT CONSTRAINT C2 CHECK ((rsex = 0 AND rage <= 35) OR (rsex = 1 AND rage <= 40)),
    pos VARCHAR CONSTRAINT c3 CHECK (pos IN ('L','AP','P'))
);

CREATE TABLE Project(
    pno INT PRIMARY KEY,
    pname VARCHAR NOT NULL,
    ino  INT ,
    FOREIGN KEY (ino) REFERENCES Researcher(rno) ON UPDATE NO ACTION
);

CREATE TABLE Participate(
    pno INT,
    rno INT,
    workmonth INT CONSTRAINT c1 CHECK (workmonth BETWEEN 1 AND 12),
    FOREIGN KEY (pno) REFERENCES Project(pno),
    FOREIGN KEY (rno) REFERENCES Researcher(rno) ON UPDATE SET NULL
);
CREATE ASSERTION WORKTIME CHECK(
    12 >=ALL(SELECT sum(workmonth) FROM Participate GROUP BY rno)
);
CREATE ASSERTION PROJECTNUM CHECK(
    3 >=ALL(SELECT count(pno) FROM Participate GROUP BY rno)
);

CREATE TABLE worker(
    wid INT PRIMARY KEY,
    name VARCHAR(30),
    age INT CONSTRAINT c1 CHECK(age <= 60),
    salay INT,
    dno INT,
    FOREIGN KEY (dno) REFERENCES department(dno) ON UPDATE CASCADE
);

CREATE TABLE department(
    dno INT PRIMARY KEY,
    name VARCHAR ,
    mname VARCHAR,
    phone VARCHAR(11)
)

-- # 插入时要判断 Mno是否在Employee表中
-- # 删除时要将所有Mno为删除行Eno的值置为0
CREATE TABLE Employee(
    ENo INT PRIMARY KEY,
    EName VARCHAR NOT NULL,
    Dno INT,
    Mno INT CONSTRAINT c1 CHECK(Mno IN (SELECT ENo FROM Employee)),
    FOREIGN KEY (Dno) REFERENCES Department(DNo) ON UPDATE CASCADE
);

SELECT PID,PJOB,SALARY,HAREA FROM PERSON ,P_HOUSE 
WHERE P_HOUSE.PID = PERSON.PID AND HPLACE="关山"
ORDER BY PID DESC,HAREA ASC